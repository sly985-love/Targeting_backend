"""
Django settings for target_backend_v2 project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hci_hc8a1^e-quogxpq2oy5ii-9)0&qd6_3*+!&c67m*z_+t4u'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'simpleui',
    'import_export',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',  # 我们要用token验证方法啦，而不是反复输入用户名和密码的方式
    'django_filters',
    'coreapi',
    'api',
    'deeplearning',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'target_backend_v2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'target_backend_v2.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'db_target_v4',
        'USER': 'root',
        'PASSWORD': '123456sly@',
        'HOST': 'localhost',
        'POST': '3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

# STATIC_ROOT = '/vol/web/static/'
# MEDIA_ROOT = '/vol/web/media/'

AUTH_USER_MODEL = 'api.user'  # 请你不要用自己的user了用我的
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
# 设置token的期限28天
TOKEN_EXPIRED_AFTER_SECONDS = 86400 * 28

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False
# 导入导出
IMPORT_EXPORT_USE_TRANSACTIONS = True
# drf配置信息
REST_FRAMEWORK = {
    # 身份认证全局配置
    'DEFAULT_AUTHENTICATION_CLASSES': (  # 身份认证
        'rest_framework.authentication.SessionAuthentication',  # session认证
        'rest_framework.authentication.BasicAuthentication'  # 基本认证
    ),
    # 权限认证全局配置
    # AllowAny 允许所有用户，默认权限
    # IsAuthenticated 仅通过登录认证的用户
    # IsAdminUser 仅管理员用户
    # IsAuthenticatedOrReadOnly 已经登陆认证的用户可以对数据进行增删改操作，没有登陆认证的只能查看数据。
    'DEFAULT_PERMISSION_CLASSES': (  # 权限认证
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    # 限流全局配置
    'DEFAULT_THROTTLE_CLASSES': [  # 限流配置类
        'rest_framework.throttling.AnonRateThrottle',  # 未认证用户[未登录用户]
        'rest_framework.throttling.UserRateThrottle',  # 已认证用户[已登录用户]
    ],
    'DEFAULT_THROTTLE_RATES': {  # 频率配置
        'anon': '5/day',  # 针对游客的访问频率进行限制
        'user': '50/day',  # 针对已经登录用户的访问频率进行限制
    },
    # # 过滤查询全局配置(一般设置局部)
    # 'DEFAULT_FILTER_BACKENDS': [
    #     'django_filters.rest_framework.DjangoFilterBackend',  # 全局过滤查询
    #     'rest_framework.filters.OrderingFilter',  # 全局排序（全局局部冲突，局部在view类里面设置）
    # ],
    # 分页全局配置（一般设置局部）
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',# 偏移量分页器
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',  # 页码分页器
    # 'PAGE_SIZE': 2,  # 每页数目
    # 自定义异常全局配置（drf先处理自己能处理的，再用自定义异常来处理）
    # APIException 所有异常的父类
    # ParseError 解析错误
    # AuthenticationFailed 认证失败
    # NotAuthenticated 尚未认证
    # PermissionDenied 权限决绝
    # NotFound 未找到
    # MethodNotAllowed 请求方式不支持
    # NotAcceptable 要获取的数据格式不支持
    # Throttled 超过限流次数
    # ValidationError 校验失败（drf）
    # 接口文档
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.AutoSchema',

}
